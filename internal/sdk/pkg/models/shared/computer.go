// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ComputerCertificatesCertificate struct {
	CommonName   *string `json:"common_name,omitempty"`
	ExpiresEpoch *int64  `json:"expires_epoch,omitempty"`
	ExpiresUtc   *string `json:"expires_utc,omitempty"`
	Identify     *bool   `json:"identify,omitempty"`
	Name         *string `json:"name,omitempty"`
}

type ComputerCertificates struct {
	Certificate *ComputerCertificatesCertificate `json:"certificate,omitempty"`
}

type ComputerConfigurationProfilesConfigurationProfile struct {
	ID          *int64  `json:"id,omitempty"`
	IsRemovable *bool   `json:"is_removable,omitempty"`
	Name        *string `json:"name,omitempty"`
	UUID        *string `json:"uuid,omitempty"`
}

type ComputerConfigurationProfiles struct {
	ConfigurationProfile *ComputerConfigurationProfilesConfigurationProfile `json:"configuration_profile,omitempty"`
	Size                 *int64                                             `json:"size,omitempty"`
}

type ComputerExtensionAttributesExtensionAttribute struct {
	ID    *int64  `json:"id,omitempty"`
	Name  *string `json:"name,omitempty"`
	Type  *string `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
}

type ComputerExtensionAttributes1 struct {
	ExtensionAttribute *ComputerExtensionAttributesExtensionAttribute `json:"extension_attribute,omitempty"`
}

type ComputerGeneralManagementStatus struct {
	EnrolledViaDep         *bool `json:"enrolled_via_dep,omitempty"`
	UserApprovedEnrollment *bool `json:"user_approved_enrollment,omitempty"`
	UserApprovedMdm        *bool `json:"user_approved_mdm,omitempty"`
}

type ComputerGeneralMdmCapableUsers struct {
	MdmCapableUser *string `json:"mdm_capable_user,omitempty"`
}

type ComputerGeneralRemoteManagement struct {
	Managed            *bool   `json:"managed,omitempty"`
	ManagementUsername *string `json:"management_username,omitempty"`
}

type ComputerGeneral struct {
	AltMacAddress              *string                          `json:"alt_mac_address,omitempty"`
	AltNetworkAdapterType      *string                          `json:"alt_network_adapter_type,omitempty"`
	AssetTag                   *string                          `json:"asset_tag,omitempty"`
	Barcode1                   *string                          `json:"barcode_1,omitempty"`
	Barcode2                   *string                          `json:"barcode_2,omitempty"`
	DistributionPoint          *string                          `json:"distribution_point,omitempty"`
	ID                         *int64                           `json:"id,omitempty"`
	InitialEntryDate           *string                          `json:"initial_entry_date,omitempty"`
	InitialEntryDateEpoch      *int64                           `json:"initial_entry_date_epoch,omitempty"`
	InitialEntryDateUtc        *string                          `json:"initial_entry_date_utc,omitempty"`
	IPAddress                  *string                          `json:"ip_address,omitempty"`
	ItunesStoreAccountIsActive *bool                            `json:"itunes_store_account_is_active,omitempty"`
	JamfVersion                *string                          `json:"jamf_version,omitempty"`
	LastCloudBackupDateEpoch   *int64                           `json:"last_cloud_backup_date_epoch,omitempty"`
	LastCloudBackupDateUtc     *string                          `json:"last_cloud_backup_date_utc,omitempty"`
	LastContactTime            *string                          `json:"last_contact_time,omitempty"`
	LastContactTimeEpoch       *int64                           `json:"last_contact_time_epoch,omitempty"`
	LastContactTimeUtc         *string                          `json:"last_contact_time_utc,omitempty"`
	LastEnrolledDateEpoch      *int64                           `json:"last_enrolled_date_epoch,omitempty"`
	LastEnrolledDateUtc        *string                          `json:"last_enrolled_date_utc,omitempty"`
	LastReportedIP             *string                          `json:"last_reported_ip,omitempty"`
	MacAddress                 *string                          `json:"mac_address,omitempty"`
	ManagementStatus           *ComputerGeneralManagementStatus `json:"management_status,omitempty"`
	MdmCapable                 *bool                            `json:"mdm_capable,omitempty"`
	MdmCapableUsers            *ComputerGeneralMdmCapableUsers  `json:"mdm_capable_users,omitempty"`
	// Name of computer
	Name               *string                          `json:"name,omitempty"`
	NetworkAdapterType *string                          `json:"network_adapter_type,omitempty"`
	Platform           *string                          `json:"platform,omitempty"`
	RemoteManagement   *ComputerGeneralRemoteManagement `json:"remote_management,omitempty"`
	ReportDate         *string                          `json:"report_date,omitempty"`
	ReportDateEpoch    *int64                           `json:"report_date_epoch,omitempty"`
	ReportDateUtc      *string                          `json:"report_date_utc,omitempty"`
	SerialNumber       *string                          `json:"serial_number,omitempty"`
	Site               *SiteObject                      `json:"site,omitempty"`
	Sus                *string                          `json:"sus,omitempty"`
	Udid               *string                          `json:"udid,omitempty"`
}

type ComputerGroupsAccountsComputerGroupMemberships struct {
	Group *string `json:"group,omitempty"`
}

type ComputerGroupsAccountsLocalAccountsUser struct {
	Administrator    *bool   `json:"administrator,omitempty"`
	FilevaultEnabled *bool   `json:"filevault_enabled,omitempty"`
	Home             *string `json:"home,omitempty"`
	HomeSize         *string `json:"home_size,omitempty"`
	HomeSizeMb       *string `json:"home_size_mb,omitempty"`
	Name             *string `json:"name,omitempty"`
	Realname         *string `json:"realname,omitempty"`
	UID              *string `json:"uid,omitempty"`
}

type ComputerGroupsAccountsLocalAccounts struct {
	User *ComputerGroupsAccountsLocalAccountsUser `json:"user,omitempty"`
}

type ComputerGroupsAccounts struct {
	ComputerGroupMemberships []ComputerGroupsAccountsComputerGroupMemberships `json:"computer_group_memberships,omitempty"`
	LocalAccounts            []ComputerGroupsAccountsLocalAccounts            `json:"local_accounts,omitempty"`
}

type ComputerHardwareFilevault2Users struct {
	User *string `json:"user,omitempty"`
}

type ComputerHardwareMappedPrintersPrinter struct {
	Location *string `json:"location,omitempty"`
	Name     *string `json:"name,omitempty"`
	Type     *string `json:"type,omitempty"`
	URI      *string `json:"uri,omitempty"`
}

type ComputerHardwareMappedPrinters struct {
	Printer *ComputerHardwareMappedPrintersPrinter `json:"printer,omitempty"`
}

type ComputerHardwareSipStatus string

const (
	ComputerHardwareSipStatusEnabled  ComputerHardwareSipStatus = "Enabled"
	ComputerHardwareSipStatusDisabled ComputerHardwareSipStatus = "Disabled"
)

func (e ComputerHardwareSipStatus) ToPointer() *ComputerHardwareSipStatus {
	return &e
}

func (e *ComputerHardwareSipStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Enabled":
		fallthrough
	case "Disabled":
		*e = ComputerHardwareSipStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ComputerHardwareSipStatus: %v", v)
	}
}

type ComputerHardwareStorageDevicePartition struct {
	BootDriveAvailableMb *int64  `json:"boot_drive_available_mb,omitempty"`
	Filevault2Percent    *int64  `json:"filevault2_percent,omitempty"`
	Filevault2Status     *string `json:"filevault2_status,omitempty"`
	FilevaultPercent     *int64  `json:"filevault_percent,omitempty"`
	FilevaultStatus      *string `json:"filevault_status,omitempty"`
	LvUUID               *string `json:"lvUUID,omitempty"`
	LvgUUID              *string `json:"lvgUUID,omitempty"`
	Name                 *string `json:"name,omitempty"`
	PartitionCapacityMb  *int64  `json:"partition_capacity_mb,omitempty"`
	PercentageFull       *int64  `json:"percentage_full,omitempty"`
	PvUUID               *string `json:"pvUUID,omitempty"`
	Size                 *int64  `json:"size,omitempty"`
	Type                 *string `json:"type,omitempty"`
}

type ComputerHardwareStorageDevice struct {
	ConnectionType  *string                                  `json:"connection_type,omitempty"`
	Disk            *string                                  `json:"disk,omitempty"`
	DriveCapacityMb *int64                                   `json:"drive_capacity_mb,omitempty"`
	Model           *string                                  `json:"model,omitempty"`
	Partition       []ComputerHardwareStorageDevicePartition `json:"partition,omitempty"`
	Revision        *string                                  `json:"revision,omitempty"`
	SerialNumber    *string                                  `json:"serial_number,omitempty"`
	Size            *int64                                   `json:"size,omitempty"`
	SmartStatus     *string                                  `json:"smart_status,omitempty"`
}

type ComputerHardwareStorage struct {
	Device *ComputerHardwareStorageDevice `json:"device,omitempty"`
}

type ComputerHardware struct {
	ActiveDirectoryStatus       *string                           `json:"active_directory_status,omitempty"`
	AvailableRAMSlots           *int64                            `json:"available_ram_slots,omitempty"`
	BatteryCapacity             *int64                            `json:"battery_capacity,omitempty"`
	BleCapable                  *bool                             `json:"ble_capable,omitempty"`
	BootRom                     *string                           `json:"boot_rom,omitempty"`
	BusSpeed                    *int64                            `json:"bus_speed,omitempty"`
	BusSpeedMhz                 *int64                            `json:"bus_speed_mhz,omitempty"`
	CacheSize                   *int64                            `json:"cache_size,omitempty"`
	CacheSizeKb                 *int64                            `json:"cache_size_kb,omitempty"`
	DiskEncryptionConfiguration *string                           `json:"disk_encryption_configuration,omitempty"`
	Filevault2Users             []ComputerHardwareFilevault2Users `json:"filevault_2_users,omitempty"`
	GatekeeperStatus            *string                           `json:"gatekeeper_status,omitempty"`
	InstitutionalRecoveryKey    *string                           `json:"institutional_recovery_key,omitempty"`
	Make                        *string                           `json:"make,omitempty"`
	MappedPrinters              []ComputerHardwareMappedPrinters  `json:"mapped_printers,omitempty"`
	MasterPasswordSet           *bool                             `json:"master_password_set,omitempty"`
	Model                       *string                           `json:"model,omitempty"`
	ModelIdentifier             *string                           `json:"model_identifier,omitempty"`
	NicSpeed                    *string                           `json:"nic_speed,omitempty"`
	NumberCores                 *int64                            `json:"number_cores,omitempty"`
	NumberProcessors            *int64                            `json:"number_processors,omitempty"`
	OpticalDrive                *string                           `json:"optical_drive,omitempty"`
	OsBuild                     *string                           `json:"os_build,omitempty"`
	OsName                      *string                           `json:"os_name,omitempty"`
	OsVersion                   *string                           `json:"os_version,omitempty"`
	ProcessorArchitechture      *string                           `json:"processor_architechture,omitempty"`
	ProcessorSpeed              *string                           `json:"processor_speed,omitempty"`
	ProcessorSpeedMhz           *string                           `json:"processor_speed_mhz,omitempty"`
	ProcessorType               *string                           `json:"processor_type,omitempty"`
	ServicePack                 *string                           `json:"service_pack,omitempty"`
	SipStatus                   *ComputerHardwareSipStatus        `json:"sip_status,omitempty"`
	SmcVersion                  *string                           `json:"smc_version,omitempty"`
	Storage                     []ComputerHardwareStorage         `json:"storage,omitempty"`
	TotalRAM                    *int64                            `json:"total_ram,omitempty"`
	TotalRAMMb                  *int64                            `json:"total_ram_mb,omitempty"`
	XprotectVersion             *string                           `json:"xprotect_version,omitempty"`
}

type ComputerPeripheralsPeripheralsAttachments struct {
	Attachment *Attachment `json:"attachment,omitempty"`
	Size       *int64      `json:"size,omitempty"`
}

type ComputerPeripheralsPeripheralsPeripheralFieldsField struct {
	Name  *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
}

type ComputerPeripheralsPeripheralsPeripheralFields struct {
	Field *ComputerPeripheralsPeripheralsPeripheralFieldsField `json:"field,omitempty"`
}

type ComputerPeripheralsPeripheralsPeripheral struct {
	BarCode1 *string                                         `json:"bar_code_1,omitempty"`
	BarCode2 *string                                         `json:"bar_code_2,omitempty"`
	Fields   *ComputerPeripheralsPeripheralsPeripheralFields `json:"fields,omitempty"`
	ID       *int64                                          `json:"id,omitempty"`
	// Name of the peripheral type
	Type *string `json:"type,omitempty"`
}

type ComputerPeripheralsPeripherals struct {
	Attachments []ComputerPeripheralsPeripheralsAttachments `json:"attachments,omitempty"`
	Peripheral  *ComputerPeripheralsPeripheralsPeripheral   `json:"peripheral,omitempty"`
	Purchasing  *Purchasing                                 `json:"purchasing,omitempty"`
}

type ComputerPeripherals struct {
	Peripherals []ComputerPeripheralsPeripherals `json:"peripherals,omitempty"`
	Size        *int64                           `json:"size,omitempty"`
}

type ComputerSecurity struct {
	ActivationLock      *bool   `json:"activation_lock,omitempty"`
	ExternalBootLevel   *string `json:"external_boot_level,omitempty"`
	FirewallEnabled     *bool   `json:"firewall_enabled,omitempty"`
	RecoveryLockEnabled *bool   `json:"recovery_lock_enabled,omitempty"`
	SecureBootLevel     *string `json:"secure_boot_level,omitempty"`
}

type ComputerSoftwareApplicationsApplication struct {
	Name    *string `json:"name,omitempty"`
	Path    *string `json:"path,omitempty"`
	Version *string `json:"version,omitempty"`
}

type ComputerSoftwareApplications struct {
	Application *ComputerSoftwareApplicationsApplication `json:"application,omitempty"`
	Size        *int64                                   `json:"size,omitempty"`
}

type ComputerSoftwareAvailableSoftwareUpdates struct {
	Name *string `json:"name,omitempty"`
}

type ComputerSoftwareAvailableUpdatesUpdate struct {
	Name        *string `json:"name,omitempty"`
	PackageName *string `json:"package_name,omitempty"`
	Version     *string `json:"version,omitempty"`
}

type ComputerSoftwareAvailableUpdates struct {
	Update *ComputerSoftwareAvailableUpdatesUpdate `json:"update,omitempty"`
}

type ComputerSoftwareCachedByCasper struct {
	Package *string `json:"package,omitempty"`
}

type ComputerSoftwareFontsFont struct {
	Name    *string `json:"name,omitempty"`
	Path    *string `json:"path,omitempty"`
	Version *string `json:"version,omitempty"`
}

type ComputerSoftwareFonts struct {
	Font *ComputerSoftwareFontsFont `json:"font,omitempty"`
	Size *int64                     `json:"size,omitempty"`
}

type ComputerSoftwareInstalledByCasper struct {
	Package *string `json:"package,omitempty"`
}

type ComputerSoftwareInstalledByInstallerSwu struct {
	Package *string `json:"package,omitempty"`
}

type ComputerSoftwareLicensedSoftware struct {
	Name *string `json:"name,omitempty"`
}

type ComputerSoftwarePluginsPlugin struct {
	Name    *string `json:"name,omitempty"`
	Path    *string `json:"path,omitempty"`
	Version *string `json:"version,omitempty"`
}

type ComputerSoftwarePlugins struct {
	Plugin *ComputerSoftwarePluginsPlugin `json:"plugin,omitempty"`
	Size   *int64                         `json:"size,omitempty"`
}

type ComputerSoftwareRunningServices struct {
	Name *string `json:"name,omitempty"`
}

type ComputerSoftware struct {
	Applications             []ComputerSoftwareApplications             `json:"applications,omitempty"`
	AvailableSoftwareUpdates []ComputerSoftwareAvailableSoftwareUpdates `json:"available_software_updates,omitempty"`
	AvailableUpdates         []ComputerSoftwareAvailableUpdates         `json:"available_updates,omitempty"`
	CachedByCasper           []ComputerSoftwareCachedByCasper           `json:"cached_by_casper,omitempty"`
	Fonts                    []ComputerSoftwareFonts                    `json:"fonts,omitempty"`
	InstalledByCasper        []ComputerSoftwareInstalledByCasper        `json:"installed_by_casper,omitempty"`
	InstalledByInstallerSwu  []ComputerSoftwareInstalledByInstallerSwu  `json:"installed_by_installer_swu,omitempty"`
	LicensedSoftware         []ComputerSoftwareLicensedSoftware         `json:"licensed_software,omitempty"`
	Plugins                  []ComputerSoftwarePlugins                  `json:"plugins,omitempty"`
	RunningServices          []ComputerSoftwareRunningServices          `json:"running_services,omitempty"`
	UnixExecutables          *string                                    `json:"unix_executables,omitempty"`
}

// Computer - OK
type Computer struct {
	Certificates          []ComputerCertificates          `json:"certificates,omitempty"`
	ConfigurationProfiles []ComputerConfigurationProfiles `json:"configuration_profiles,omitempty"`
	ExtensionAttributes   []ComputerExtensionAttributes1  `json:"extension_attributes,omitempty"`
	General               *ComputerGeneral                `json:"general,omitempty"`
	GroupsAccounts        *ComputerGroupsAccounts         `json:"groups_accounts,omitempty"`
	Hardware              *ComputerHardware               `json:"hardware,omitempty"`
	Location              *Location                       `json:"location,omitempty"`
	Peripherals           *ComputerPeripherals            `json:"peripherals,omitempty"`
	Purchasing            *Purchasing                     `json:"purchasing,omitempty"`
	Security              *ComputerSecurity               `json:"security,omitempty"`
	Software              *ComputerSoftware               `json:"software,omitempty"`
}
