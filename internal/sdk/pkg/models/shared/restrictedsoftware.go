// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type RestrictedSoftwareGeneral struct {
	DeleteExecutable      *bool   `json:"delete_executable,omitempty"`
	DisplayMessage        *string `json:"display_message,omitempty"`
	ID                    *int64  `json:"id,omitempty"`
	KillProcess           *bool   `json:"kill_process,omitempty"`
	MatchExactProcessName *bool   `json:"match_exact_process_name,omitempty"`
	// Name of the restricted software
	Name             string      `json:"name"`
	ProcessName      string      `json:"process_name"`
	SendNotification *bool       `json:"send_notification,omitempty"`
	Site             *SiteObject `json:"site,omitempty"`
}

type RestrictedSoftwareScopeBuildings struct {
	Building *IDName `json:"building,omitempty"`
}

type RestrictedSoftwareScopeComputerGroups struct {
	ComputerGroup *IDName `json:"computer_group,omitempty"`
}

type RestrictedSoftwareScopeComputers struct {
	Computer *IDName `json:"computer,omitempty"`
}

type RestrictedSoftwareScopeDepartments struct {
	Department *IDName `json:"department,omitempty"`
}

type RestrictedSoftwareScopeExclusionsBuildings struct {
	Building *IDName `json:"building,omitempty"`
}

type RestrictedSoftwareScopeExclusionsComputerGroups struct {
	ComputerGroup *IDName `json:"computer_group,omitempty"`
}

type RestrictedSoftwareScopeExclusionsComputers struct {
	Computer *IDName `json:"computer,omitempty"`
}

type RestrictedSoftwareScopeExclusionsDepartments struct {
	Department *IDName `json:"department,omitempty"`
}

type RestrictedSoftwareScopeExclusionsUsers struct {
	User *IDName `json:"user,omitempty"`
}

type RestrictedSoftwareScopeExclusions struct {
	Buildings      []RestrictedSoftwareScopeExclusionsBuildings      `json:"buildings,omitempty"`
	ComputerGroups []RestrictedSoftwareScopeExclusionsComputerGroups `json:"computer_groups,omitempty"`
	Computers      []RestrictedSoftwareScopeExclusionsComputers      `json:"computers,omitempty"`
	Departments    []RestrictedSoftwareScopeExclusionsDepartments    `json:"departments,omitempty"`
	Users          []RestrictedSoftwareScopeExclusionsUsers          `json:"users,omitempty"`
}

type RestrictedSoftwareScope struct {
	AllComputers   *bool                                   `json:"all_computers,omitempty"`
	Buildings      []RestrictedSoftwareScopeBuildings      `json:"buildings,omitempty"`
	ComputerGroups []RestrictedSoftwareScopeComputerGroups `json:"computer_groups,omitempty"`
	Computers      []RestrictedSoftwareScopeComputers      `json:"computers,omitempty"`
	Departments    []RestrictedSoftwareScopeDepartments    `json:"departments,omitempty"`
	Exclusions     *RestrictedSoftwareScopeExclusions      `json:"exclusions,omitempty"`
}

// RestrictedSoftware - OK
type RestrictedSoftware struct {
	General *RestrictedSoftwareGeneral `json:"general,omitempty"`
	Scope   *RestrictedSoftwareScope   `json:"scope,omitempty"`
}
