// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VppInvitationGeneralDistributionMethod string

const (
	VppInvitationGeneralDistributionMethodPromptUsersToAcceptMakeAvailableInSelfService VppInvitationGeneralDistributionMethod = "Prompt users to accept/make available in Self Service"
	VppInvitationGeneralDistributionMethodSendEmails                                    VppInvitationGeneralDistributionMethod = "Send emails"
	VppInvitationGeneralDistributionMethodMakeAvailableInSelfServiceOnly                VppInvitationGeneralDistributionMethod = "Make available in Self Service only"
)

func (e VppInvitationGeneralDistributionMethod) ToPointer() *VppInvitationGeneralDistributionMethod {
	return &e
}

func (e *VppInvitationGeneralDistributionMethod) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Prompt users to accept/make available in Self Service":
		fallthrough
	case "Send emails":
		fallthrough
	case "Make available in Self Service only":
		*e = VppInvitationGeneralDistributionMethod(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VppInvitationGeneralDistributionMethod: %v", v)
	}
}

type VppInvitationGeneralVppAccount struct {
	ID int64 `json:"id"`
}

type VppInvitationGeneral struct {
	DistributionMethod *VppInvitationGeneralDistributionMethod `json:"distribution_method,omitempty"`
	ID                 *int64                                  `json:"id,omitempty"`
	Message            *string                                 `json:"message,omitempty"`
	Name               string                                  `json:"name"`
	RequireLogin       *bool                                   `json:"require_login,omitempty"`
	SenderEmailAddress *string                                 `json:"sender_email_address,omitempty"`
	SenderName         *string                                 `json:"sender_name,omitempty"`
	Subject            *string                                 `json:"subject,omitempty"`
	VppAccount         *VppInvitationGeneralVppAccount         `json:"vpp_account,omitempty"`
}

type VppInvitationInvitationUsageUsage struct {
	EmailAddress      *string `json:"email_address,omitempty"`
	ID                *int64  `json:"id,omitempty"`
	LastActionDateUtc *string `json:"last_action_date_utc,omitempty"`
	LastActionEpoch   *int64  `json:"last_action_epoch,omitempty"`
	Name              *string `json:"name,omitempty"`
	Status            *string `json:"status,omitempty"`
	VppAccount        *string `json:"vpp_account,omitempty"`
}

type VppInvitationInvitationUsage struct {
	Size  *int64                             `json:"size,omitempty"`
	Usage *VppInvitationInvitationUsageUsage `json:"usage,omitempty"`
}

type VppInvitationScopeExclusionsJssUserGroups struct {
	UserGroup *IDName `json:"user_group,omitempty"`
}

type VppInvitationScopeExclusionsJssUsers struct {
	User *IDName `json:"user,omitempty"`
}

type VppInvitationScopeExclusionsUserGroupsUserGroup struct {
	Name *string `json:"name,omitempty"`
}

type VppInvitationScopeExclusionsUserGroups struct {
	UserGroup *VppInvitationScopeExclusionsUserGroupsUserGroup `json:"user_group,omitempty"`
}

type VppInvitationScopeExclusions struct {
	JssUserGroups []VppInvitationScopeExclusionsJssUserGroups `json:"jss_user_groups,omitempty"`
	JssUsers      []VppInvitationScopeExclusionsJssUsers      `json:"jss_users,omitempty"`
	UserGroups    []VppInvitationScopeExclusionsUserGroups    `json:"user_groups,omitempty"`
}

type VppInvitationScopeJssUserGroups struct {
	UserGroup *IDName `json:"user_group,omitempty"`
}

type VppInvitationScopeJssUsers struct {
	User *IDName `json:"user,omitempty"`
}

type VppInvitationScopeLimitationsUserGroups struct {
	UserGroup *IDName `json:"user_group,omitempty"`
}

type VppInvitationScopeLimitations struct {
	UserGroups []VppInvitationScopeLimitationsUserGroups `json:"user_groups,omitempty"`
}

type VppInvitationScope struct {
	AllJssUsers   *bool                             `json:"all_jss_users,omitempty"`
	Exclusions    *VppInvitationScopeExclusions     `json:"exclusions,omitempty"`
	JssUserGroups []VppInvitationScopeJssUserGroups `json:"jss_user_groups,omitempty"`
	JssUsers      []VppInvitationScopeJssUsers      `json:"jss_users,omitempty"`
	Limitations   *VppInvitationScopeLimitations    `json:"limitations,omitempty"`
}

// VppInvitation - OK
type VppInvitation struct {
	General         *VppInvitationGeneral          `json:"general,omitempty"`
	InvitationUsage []VppInvitationInvitationUsage `json:"invitation_usage,omitempty"`
	Scope           *VppInvitationScope            `json:"scope,omitempty"`
}
