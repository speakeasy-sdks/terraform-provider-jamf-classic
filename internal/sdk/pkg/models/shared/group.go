// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GroupAccessLevel string

const (
	GroupAccessLevelFullAccess  GroupAccessLevel = "Full Access"
	GroupAccessLevelSiteAccess  GroupAccessLevel = "Site Access"
	GroupAccessLevelGroupAccess GroupAccessLevel = "Group Access"
)

func (e GroupAccessLevel) ToPointer() *GroupAccessLevel {
	return &e
}

func (e *GroupAccessLevel) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Full Access":
		fallthrough
	case "Site Access":
		fallthrough
	case "Group Access":
		*e = GroupAccessLevel(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupAccessLevel: %v", v)
	}
}

type GroupMembers struct {
	User *IDName `json:"user,omitempty"`
}

type GroupPrivilegeSet string

const (
	GroupPrivilegeSetAdministrator  GroupPrivilegeSet = "Administrator"
	GroupPrivilegeSetAuditor        GroupPrivilegeSet = "Auditor"
	GroupPrivilegeSetEnrollmentOnly GroupPrivilegeSet = "Enrollment Only"
	GroupPrivilegeSetCustom         GroupPrivilegeSet = "Custom"
)

func (e GroupPrivilegeSet) ToPointer() *GroupPrivilegeSet {
	return &e
}

func (e *GroupPrivilegeSet) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Administrator":
		fallthrough
	case "Auditor":
		fallthrough
	case "Enrollment Only":
		fallthrough
	case "Custom":
		*e = GroupPrivilegeSet(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupPrivilegeSet: %v", v)
	}
}

type GroupPrivilegesCasperAdmin struct {
	Privilege *string `json:"privilege,omitempty"`
}

type GroupPrivilegesCasperImaging struct {
	Privilege *string `json:"privilege,omitempty"`
}

type GroupPrivilegesCasperRemote struct {
	Privilege *string `json:"privilege,omitempty"`
}

type GroupPrivilegesJssActions struct {
	Privilege *string `json:"privilege,omitempty"`
}

type GroupPrivilegesJssObjects struct {
	Privilege *string `json:"privilege,omitempty"`
}

type GroupPrivilegesJssSettings struct {
	Privilege *string `json:"privilege,omitempty"`
}

type GroupPrivilegesRecon struct {
	Privilege *string `json:"privilege,omitempty"`
}

type GroupPrivileges struct {
	CasperAdmin   []GroupPrivilegesCasperAdmin   `json:"casper_admin,omitempty"`
	CasperImaging []GroupPrivilegesCasperImaging `json:"casper_imaging,omitempty"`
	CasperRemote  []GroupPrivilegesCasperRemote  `json:"casper_remote,omitempty"`
	JssActions    []GroupPrivilegesJssActions    `json:"jss_actions,omitempty"`
	JssObjects    []GroupPrivilegesJssObjects    `json:"jss_objects,omitempty"`
	JssSettings   []GroupPrivilegesJssSettings   `json:"jss_settings,omitempty"`
	Recon         []GroupPrivilegesRecon         `json:"recon,omitempty"`
}

// Group - OK
type Group struct {
	AccessLevel *GroupAccessLevel `json:"access_level,omitempty"`
	ID          *int64            `json:"id,omitempty"`
	Members     []GroupMembers    `json:"members,omitempty"`
	// Group name
	Name         string             `json:"name"`
	PrivilegeSet *GroupPrivilegeSet `json:"privilege_set,omitempty"`
	Privileges   *GroupPrivileges   `json:"privileges,omitempty"`
	Site         *Site              `json:"site,omitempty"`
}
