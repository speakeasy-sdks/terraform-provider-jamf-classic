// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UserExtensionAttributeDataType string

const (
	UserExtensionAttributeDataTypeString  UserExtensionAttributeDataType = "String"
	UserExtensionAttributeDataTypeInteger UserExtensionAttributeDataType = "Integer"
	UserExtensionAttributeDataTypeDate    UserExtensionAttributeDataType = "Date"
)

func (e UserExtensionAttributeDataType) ToPointer() *UserExtensionAttributeDataType {
	return &e
}

func (e *UserExtensionAttributeDataType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "String":
		fallthrough
	case "Integer":
		fallthrough
	case "Date":
		*e = UserExtensionAttributeDataType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserExtensionAttributeDataType: %v", v)
	}
}

type UserExtensionAttributeInputTypeType string

const (
	UserExtensionAttributeInputTypeTypeTextField UserExtensionAttributeInputTypeType = "Text Field"
	UserExtensionAttributeInputTypeTypePopUpMenu UserExtensionAttributeInputTypeType = "Pop-up Menu"
)

func (e UserExtensionAttributeInputTypeType) ToPointer() *UserExtensionAttributeInputTypeType {
	return &e
}

func (e *UserExtensionAttributeInputTypeType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Text Field":
		fallthrough
	case "Pop-up Menu":
		*e = UserExtensionAttributeInputTypeType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserExtensionAttributeInputTypeType: %v", v)
	}
}

type UserExtensionAttributeInputType struct {
	Type *UserExtensionAttributeInputTypeType `json:"type,omitempty"`
}

// UserExtensionAttribute - OK
type UserExtensionAttribute struct {
	DataType    *UserExtensionAttributeDataType  `json:"data_type,omitempty"`
	Description *string                          `json:"description,omitempty"`
	ID          *int64                           `json:"id,omitempty"`
	InputType   *UserExtensionAttributeInputType `json:"input_type,omitempty"`
	// Name of the user extension attribute
	Name string `json:"name"`
}
