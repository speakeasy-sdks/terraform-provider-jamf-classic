// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UserGroupCriteriaCriterionAndOr string

const (
	UserGroupCriteriaCriterionAndOrAnd UserGroupCriteriaCriterionAndOr = "and"
	UserGroupCriteriaCriterionAndOrOr  UserGroupCriteriaCriterionAndOr = "or"
)

func (e UserGroupCriteriaCriterionAndOr) ToPointer() *UserGroupCriteriaCriterionAndOr {
	return &e
}

func (e *UserGroupCriteriaCriterionAndOr) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "and":
		fallthrough
	case "or":
		*e = UserGroupCriteriaCriterionAndOr(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserGroupCriteriaCriterionAndOr: %v", v)
	}
}

type UserGroupCriteriaCriterion struct {
	AndOr        *UserGroupCriteriaCriterionAndOr `json:"and_or,omitempty"`
	ClosingParen *bool                            `json:"closing_paren,omitempty"`
	// Name of the criteria
	Name         *string `json:"name,omitempty"`
	OpeningParen *bool   `json:"opening_paren,omitempty"`
	Priority     *int64  `json:"priority,omitempty"`
	// Operator
	SearchType *string `json:"search_type,omitempty"`
	Value      *string `json:"value,omitempty"`
}

type UserGroupCriteria struct {
	Criterion *UserGroupCriteriaCriterion `json:"criterion,omitempty"`
	Size      *int64                      `json:"size,omitempty"`
}

type UserGroupUsersUser struct {
	EmailAddress *string `json:"email_address,omitempty"`
	FullName     *string `json:"full_name,omitempty"`
	ID           *int64  `json:"id,omitempty"`
	PhoneNumber  *string `json:"phone_number,omitempty"`
	Username     *string `json:"username,omitempty"`
}

type UserGroupUsers struct {
	Size *int64              `json:"size,omitempty"`
	User *UserGroupUsersUser `json:"user,omitempty"`
}

// UserGroup - OK
type UserGroup struct {
	Criteria         []UserGroupCriteria `json:"criteria,omitempty"`
	ID               *int64              `json:"id,omitempty"`
	IsNotifyOnChange *bool               `json:"is_notify_on_change,omitempty"`
	IsSmart          bool                `json:"is_smart"`
	// Name of the user group
	Name  string           `json:"name"`
	Site  *SiteObject      `json:"site,omitempty"`
	Users []UserGroupUsers `json:"users,omitempty"`
}
