// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MobileDeviceExtensionAttributeDateType string

const (
	MobileDeviceExtensionAttributeDateTypeString  MobileDeviceExtensionAttributeDateType = "String"
	MobileDeviceExtensionAttributeDateTypeDate    MobileDeviceExtensionAttributeDateType = "Date"
	MobileDeviceExtensionAttributeDateTypeInteger MobileDeviceExtensionAttributeDateType = "Integer"
)

func (e MobileDeviceExtensionAttributeDateType) ToPointer() *MobileDeviceExtensionAttributeDateType {
	return &e
}

func (e *MobileDeviceExtensionAttributeDateType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "String":
		fallthrough
	case "Date":
		fallthrough
	case "Integer":
		*e = MobileDeviceExtensionAttributeDateType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MobileDeviceExtensionAttributeDateType: %v", v)
	}
}

type MobileDeviceExtensionAttributeInputTypeType string

const (
	MobileDeviceExtensionAttributeInputTypeTypeTextField            MobileDeviceExtensionAttributeInputTypeType = "Text Field"
	MobileDeviceExtensionAttributeInputTypeTypePopUpMenu            MobileDeviceExtensionAttributeInputTypeType = "Pop-up Menu"
	MobileDeviceExtensionAttributeInputTypeTypeLdapAttributeMapping MobileDeviceExtensionAttributeInputTypeType = "LDAP Attribute Mapping"
)

func (e MobileDeviceExtensionAttributeInputTypeType) ToPointer() *MobileDeviceExtensionAttributeInputTypeType {
	return &e
}

func (e *MobileDeviceExtensionAttributeInputTypeType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Text Field":
		fallthrough
	case "Pop-up Menu":
		fallthrough
	case "LDAP Attribute Mapping":
		*e = MobileDeviceExtensionAttributeInputTypeType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MobileDeviceExtensionAttributeInputTypeType: %v", v)
	}
}

type MobileDeviceExtensionAttributeInputType struct {
	Type *MobileDeviceExtensionAttributeInputTypeType `json:"type,omitempty"`
}

type MobileDeviceExtensionAttributeInventoryDisplay string

const (
	MobileDeviceExtensionAttributeInventoryDisplayGeneral             MobileDeviceExtensionAttributeInventoryDisplay = "General"
	MobileDeviceExtensionAttributeInventoryDisplayHardware            MobileDeviceExtensionAttributeInventoryDisplay = "Hardware"
	MobileDeviceExtensionAttributeInventoryDisplayUserAndLocation     MobileDeviceExtensionAttributeInventoryDisplay = "User and Location"
	MobileDeviceExtensionAttributeInventoryDisplayPurchasing          MobileDeviceExtensionAttributeInventoryDisplay = "Purchasing"
	MobileDeviceExtensionAttributeInventoryDisplayExtensionAttributes MobileDeviceExtensionAttributeInventoryDisplay = "Extension Attributes"
)

func (e MobileDeviceExtensionAttributeInventoryDisplay) ToPointer() *MobileDeviceExtensionAttributeInventoryDisplay {
	return &e
}

func (e *MobileDeviceExtensionAttributeInventoryDisplay) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "General":
		fallthrough
	case "Hardware":
		fallthrough
	case "User and Location":
		fallthrough
	case "Purchasing":
		fallthrough
	case "Extension Attributes":
		*e = MobileDeviceExtensionAttributeInventoryDisplay(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MobileDeviceExtensionAttributeInventoryDisplay: %v", v)
	}
}

// MobileDeviceExtensionAttribute - OK
type MobileDeviceExtensionAttribute struct {
	DateType         *MobileDeviceExtensionAttributeDateType         `json:"date_type,omitempty"`
	Description      *string                                         `json:"description,omitempty"`
	ID               *int64                                          `json:"id,omitempty"`
	InputType        *MobileDeviceExtensionAttributeInputType        `json:"input_type,omitempty"`
	InventoryDisplay *MobileDeviceExtensionAttributeInventoryDisplay `json:"inventory_display,omitempty"`
	Name             string                                          `json:"name"`
}
