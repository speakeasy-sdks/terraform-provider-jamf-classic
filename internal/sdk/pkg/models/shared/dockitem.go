// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DockItemType string

const (
	DockItemTypeApp    DockItemType = "App"
	DockItemTypeFile   DockItemType = "File"
	DockItemTypeFolder DockItemType = "Folder"
)

func (e DockItemType) ToPointer() *DockItemType {
	return &e
}

func (e *DockItemType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "App":
		fallthrough
	case "File":
		fallthrough
	case "Folder":
		*e = DockItemType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DockItemType: %v", v)
	}
}

// DockItem - OK
type DockItem struct {
	Contents *string `json:"contents,omitempty"`
	ID       *int64  `json:"id,omitempty"`
	// Name of the dock item
	Name string       `json:"name"`
	Path string       `json:"path"`
	Type DockItemType `json:"type"`
}
