// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"jamf/internal/sdk/pkg/models/shared"
	"jamf/internal/sdk/pkg/types"
	"net/http"
)

// FindComputerHardwareSoftwareReportsByNameSubsetSubset - Subset to filter by
type FindComputerHardwareSoftwareReportsByNameSubsetSubset string

const (
	FindComputerHardwareSoftwareReportsByNameSubsetSubsetSoftware FindComputerHardwareSoftwareReportsByNameSubsetSubset = "Software"
	FindComputerHardwareSoftwareReportsByNameSubsetSubsetHardwre  FindComputerHardwareSoftwareReportsByNameSubsetSubset = "Hardwre"
	FindComputerHardwareSoftwareReportsByNameSubsetSubsetFonts    FindComputerHardwareSoftwareReportsByNameSubsetSubset = "Fonts"
	FindComputerHardwareSoftwareReportsByNameSubsetSubsetPlugins  FindComputerHardwareSoftwareReportsByNameSubsetSubset = "Plugins"
)

func (e FindComputerHardwareSoftwareReportsByNameSubsetSubset) ToPointer() *FindComputerHardwareSoftwareReportsByNameSubsetSubset {
	return &e
}

func (e *FindComputerHardwareSoftwareReportsByNameSubsetSubset) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Software":
		fallthrough
	case "Hardwre":
		fallthrough
	case "Fonts":
		fallthrough
	case "Plugins":
		*e = FindComputerHardwareSoftwareReportsByNameSubsetSubset(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FindComputerHardwareSoftwareReportsByNameSubsetSubset: %v", v)
	}
}

type FindComputerHardwareSoftwareReportsByNameSubsetRequest struct {
	// End date (e.g. yyyy-mm-dd)
	EndDate types.Date `pathParam:"style=simple,explode=false,name=end_date"`
	// Name to filter by
	Name string `pathParam:"style=simple,explode=false,name=name"`
	// Start date (e.g. yyyy-mm-dd)
	StartDate types.Date `pathParam:"style=simple,explode=false,name=start_date"`
	// Subset to filter by
	Subset FindComputerHardwareSoftwareReportsByNameSubsetSubset `pathParam:"style=simple,explode=false,name=subset"`
}

type FindComputerHardwareSoftwareReportsByNameSubsetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	ComputerHardwareSoftwareReports *shared.ComputerHardwareSoftwareReports
}
