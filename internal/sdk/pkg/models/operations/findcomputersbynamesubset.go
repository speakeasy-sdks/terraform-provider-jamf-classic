// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// FindComputersByNameSubsetSubset - Subset to filter by
type FindComputersByNameSubsetSubset string

const (
	FindComputersByNameSubsetSubsetGeneral               FindComputersByNameSubsetSubset = "General"
	FindComputersByNameSubsetSubsetLocation              FindComputersByNameSubsetSubset = "Location"
	FindComputersByNameSubsetSubsetPurchasing            FindComputersByNameSubsetSubset = "Purchasing"
	FindComputersByNameSubsetSubsetPeripherals           FindComputersByNameSubsetSubset = "Peripherals"
	FindComputersByNameSubsetSubsetHardware              FindComputersByNameSubsetSubset = "Hardware"
	FindComputersByNameSubsetSubsetCertificates          FindComputersByNameSubsetSubset = "Certificates"
	FindComputersByNameSubsetSubsetSoftware              FindComputersByNameSubsetSubset = "Software"
	FindComputersByNameSubsetSubsetExtensionAttributes   FindComputersByNameSubsetSubset = "ExtensionAttributes"
	FindComputersByNameSubsetSubsetGroupsAccounts        FindComputersByNameSubsetSubset = "GroupsAccounts"
	FindComputersByNameSubsetSubsetIphones               FindComputersByNameSubsetSubset = "iphones"
	FindComputersByNameSubsetSubsetConfigurationProfiles FindComputersByNameSubsetSubset = "ConfigurationProfiles"
)

func (e FindComputersByNameSubsetSubset) ToPointer() *FindComputersByNameSubsetSubset {
	return &e
}

func (e *FindComputersByNameSubsetSubset) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "General":
		fallthrough
	case "Location":
		fallthrough
	case "Purchasing":
		fallthrough
	case "Peripherals":
		fallthrough
	case "Hardware":
		fallthrough
	case "Certificates":
		fallthrough
	case "Software":
		fallthrough
	case "ExtensionAttributes":
		fallthrough
	case "GroupsAccounts":
		fallthrough
	case "iphones":
		fallthrough
	case "ConfigurationProfiles":
		*e = FindComputersByNameSubsetSubset(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FindComputersByNameSubsetSubset: %v", v)
	}
}

type FindComputersByNameSubsetRequest struct {
	// Name to filter by
	Name string `pathParam:"style=simple,explode=false,name=name"`
	// Subset to filter by
	Subset FindComputersByNameSubsetSubset `pathParam:"style=simple,explode=false,name=subset"`
}

type FindComputersByNameSubset200ApplicationXMLCertificatesCertificate struct {
	CommonName   *string
	ExpiresEpoch *int64
	ExpiresUtc   *string
	Identify     *bool
	Name         *string
}

type FindComputersByNameSubset200ApplicationXMLCertificates struct {
	Certificate *FindComputersByNameSubset200ApplicationXMLCertificatesCertificate
}

type FindComputersByNameSubset200ApplicationXMLConfigurationProfilesConfigurationProfile struct {
	ID          *int64
	IsRemovable *bool
	Name        *string
	UUID        *string
}

type FindComputersByNameSubset200ApplicationXMLConfigurationProfiles struct {
	ConfigurationProfile *FindComputersByNameSubset200ApplicationXMLConfigurationProfilesConfigurationProfile
	Size                 *int64
}

type FindComputersByNameSubset200ApplicationXMLExtensionAttributesExtensionAttribute struct {
	ID    *int64
	Name  *string
	Type  *string
	Value *string
}

type FindComputersByNameSubset200ApplicationXMLExtensionAttributes struct {
	ExtensionAttribute *FindComputersByNameSubset200ApplicationXMLExtensionAttributesExtensionAttribute
}

type FindComputersByNameSubset200ApplicationXMLGeneralManagementStatus struct {
	EnrolledViaDep         *bool
	UserApprovedEnrollment *bool
	UserApprovedMdm        *bool
}

type FindComputersByNameSubset200ApplicationXMLGeneralMdmCapableUsers struct {
	MdmCapableUser *string
}

type FindComputersByNameSubset200ApplicationXMLGeneralRemoteManagement struct {
	Managed            *bool
	ManagementUsername *string
}

type FindComputersByNameSubset200ApplicationXMLGeneralSite struct {
	ID *int64
	// Name of the site
	Name string
}

type FindComputersByNameSubset200ApplicationXMLGeneral struct {
	AltMacAddress              *string
	AltNetworkAdapterType      *string
	AssetTag                   *string
	Barcode1                   *string
	Barcode2                   *string
	DistributionPoint          *string
	ID                         *int64
	InitialEntryDate           *string
	InitialEntryDateEpoch      *int64
	InitialEntryDateUtc        *string
	IPAddress                  *string
	ItunesStoreAccountIsActive *bool
	JamfVersion                *string
	LastCloudBackupDateEpoch   *int64
	LastCloudBackupDateUtc     *string
	LastContactTime            *string
	LastContactTimeEpoch       *int64
	LastContactTimeUtc         *string
	LastEnrolledDateEpoch      *int64
	LastEnrolledDateUtc        *string
	LastReportedIP             *string
	MacAddress                 *string
	ManagementStatus           *FindComputersByNameSubset200ApplicationXMLGeneralManagementStatus
	MdmCapable                 *bool
	MdmCapableUsers            *FindComputersByNameSubset200ApplicationXMLGeneralMdmCapableUsers
	// Name of computer
	Name               *string
	NetworkAdapterType *string
	Platform           *string
	RemoteManagement   *FindComputersByNameSubset200ApplicationXMLGeneralRemoteManagement
	ReportDate         *string
	ReportDateEpoch    *int64
	ReportDateUtc      *string
	SerialNumber       *string
	Site               *FindComputersByNameSubset200ApplicationXMLGeneralSite
	Sus                *string
	Udid               *string
}

type FindComputersByNameSubset200ApplicationXMLGroupsAccountsComputerGroupMemberships struct {
	Group *string
}

type FindComputersByNameSubset200ApplicationXMLGroupsAccountsLocalAccountsUser struct {
	Administrator    *bool
	FilevaultEnabled *bool
	Home             *string
	HomeSize         *string
	HomeSizeMb       *string
	Name             *string
	Realname         *string
	UID              *string
}

type FindComputersByNameSubset200ApplicationXMLGroupsAccountsLocalAccounts struct {
	User *FindComputersByNameSubset200ApplicationXMLGroupsAccountsLocalAccountsUser
}

type FindComputersByNameSubset200ApplicationXMLGroupsAccounts struct {
	ComputerGroupMemberships []FindComputersByNameSubset200ApplicationXMLGroupsAccountsComputerGroupMemberships
	LocalAccounts            []FindComputersByNameSubset200ApplicationXMLGroupsAccountsLocalAccounts
}

type FindComputersByNameSubset200ApplicationXMLHardwareFilevault2Users struct {
	User *string
}

type FindComputersByNameSubset200ApplicationXMLHardwareMappedPrintersPrinter struct {
	Location *string
	Name     *string
	Type     *string
	URI      *string
}

type FindComputersByNameSubset200ApplicationXMLHardwareMappedPrinters struct {
	Printer *FindComputersByNameSubset200ApplicationXMLHardwareMappedPrintersPrinter
}

type FindComputersByNameSubset200ApplicationXMLHardwareSipStatus string

const (
	FindComputersByNameSubset200ApplicationXMLHardwareSipStatusEnabled  FindComputersByNameSubset200ApplicationXMLHardwareSipStatus = "Enabled"
	FindComputersByNameSubset200ApplicationXMLHardwareSipStatusDisabled FindComputersByNameSubset200ApplicationXMLHardwareSipStatus = "Disabled"
)

func (e FindComputersByNameSubset200ApplicationXMLHardwareSipStatus) ToPointer() *FindComputersByNameSubset200ApplicationXMLHardwareSipStatus {
	return &e
}

func (e *FindComputersByNameSubset200ApplicationXMLHardwareSipStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Enabled":
		fallthrough
	case "Disabled":
		*e = FindComputersByNameSubset200ApplicationXMLHardwareSipStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FindComputersByNameSubset200ApplicationXMLHardwareSipStatus: %v", v)
	}
}

type FindComputersByNameSubset200ApplicationXMLHardwareStorageDevicePartition struct {
	BootDriveAvailableMb *int64
	Filevault2Percent    *int64
	Filevault2Status     *string
	FilevaultPercent     *int64
	FilevaultStatus      *string
	LvUUID               *string
	LvgUUID              *string
	Name                 *string
	PartitionCapacityMb  *int64
	PercentageFull       *int64
	PvUUID               *string
	Size                 *int64
	Type                 *string
}

type FindComputersByNameSubset200ApplicationXMLHardwareStorageDevice struct {
	ConnectionType  *string
	Disk            *string
	DriveCapacityMb *int64
	Model           *string
	Partition       []FindComputersByNameSubset200ApplicationXMLHardwareStorageDevicePartition
	Revision        *string
	SerialNumber    *string
	Size            *int64
	SmartStatus     *string
}

type FindComputersByNameSubset200ApplicationXMLHardwareStorage struct {
	Device *FindComputersByNameSubset200ApplicationXMLHardwareStorageDevice
}

type FindComputersByNameSubset200ApplicationXMLHardware struct {
	ActiveDirectoryStatus       *string
	AvailableRAMSlots           *int64
	BatteryCapacity             *int64
	BleCapable                  *bool
	BootRom                     *string
	BusSpeed                    *int64
	BusSpeedMhz                 *int64
	CacheSize                   *int64
	CacheSizeKb                 *int64
	DiskEncryptionConfiguration *string
	Filevault2Users             []FindComputersByNameSubset200ApplicationXMLHardwareFilevault2Users
	GatekeeperStatus            *string
	InstitutionalRecoveryKey    *string
	Make                        *string
	MappedPrinters              []FindComputersByNameSubset200ApplicationXMLHardwareMappedPrinters
	MasterPasswordSet           *bool
	Model                       *string
	ModelIdentifier             *string
	NicSpeed                    *string
	NumberCores                 *int64
	NumberProcessors            *int64
	OpticalDrive                *string
	OsBuild                     *string
	OsName                      *string
	OsVersion                   *string
	ProcessorArchitechture      *string
	ProcessorSpeed              *string
	ProcessorSpeedMhz           *string
	ProcessorType               *string
	ServicePack                 *string
	SipStatus                   *FindComputersByNameSubset200ApplicationXMLHardwareSipStatus
	SmcVersion                  *string
	Storage                     []FindComputersByNameSubset200ApplicationXMLHardwareStorage
	TotalRAM                    *int64
	TotalRAMMb                  *int64
	XprotectVersion             *string
}

type FindComputersByNameSubset200ApplicationXMLLocation struct {
	Building     *string
	Department   *string
	EmailAddress *string
	Phone        *string
	PhoneNumber  *string
	Position     *string
	RealName     *string
	Realname     *string
	Room         *string
	Username     *string
}

type FindComputersByNameSubset200ApplicationXMLPeripheralsPeripheralsAttachmentsAttachment struct {
	Filename *string
	ID       *int64
	URI      *string
}

type FindComputersByNameSubset200ApplicationXMLPeripheralsPeripheralsAttachments struct {
	Attachment *FindComputersByNameSubset200ApplicationXMLPeripheralsPeripheralsAttachmentsAttachment
	Size       *int64
}

type FindComputersByNameSubset200ApplicationXMLPeripheralsPeripheralsPeripheralFieldsField struct {
	Name  *string
	Value *string
}

type FindComputersByNameSubset200ApplicationXMLPeripheralsPeripheralsPeripheralFields struct {
	Field *FindComputersByNameSubset200ApplicationXMLPeripheralsPeripheralsPeripheralFieldsField
}

type FindComputersByNameSubset200ApplicationXMLPeripheralsPeripheralsPeripheral struct {
	BarCode1 *string
	BarCode2 *string
	Fields   *FindComputersByNameSubset200ApplicationXMLPeripheralsPeripheralsPeripheralFields
	ID       *int64
	// Name of the peripheral type
	Type *string
}

type FindComputersByNameSubset200ApplicationXMLPeripheralsPeripheralsPurchasing struct {
	ApplecareID          *string
	IsLeased             *bool
	IsPurchased          *bool
	LeaseExpires         *string
	LeaseExpiresEpoch    *int64
	LeaseExpiresUtc      *string
	LifeExpectancy       *int64
	PoDate               *string
	PoDateEpoch          *int64
	PoDateUtc            *string
	PoNumber             *string
	PurchasePrice        *string
	PurchasingAccount    *string
	PurchasingContact    *string
	Vendor               *string
	WarrantyExpires      *string
	WarrantyExpiresEpoch *int64
	WarrantyExpiresUtc   *string
}

type FindComputersByNameSubset200ApplicationXMLPeripheralsPeripherals struct {
	Attachments []FindComputersByNameSubset200ApplicationXMLPeripheralsPeripheralsAttachments
	Peripheral  *FindComputersByNameSubset200ApplicationXMLPeripheralsPeripheralsPeripheral
	Purchasing  *FindComputersByNameSubset200ApplicationXMLPeripheralsPeripheralsPurchasing
}

type FindComputersByNameSubset200ApplicationXMLPeripherals struct {
	Peripherals []FindComputersByNameSubset200ApplicationXMLPeripheralsPeripherals
	Size        *int64
}

type FindComputersByNameSubset200ApplicationXMLPurchasing struct {
	ApplecareID          *string
	IsLeased             *bool
	IsPurchased          *bool
	LeaseExpires         *string
	LeaseExpiresEpoch    *int64
	LeaseExpiresUtc      *string
	LifeExpectancy       *int64
	PoDate               *string
	PoDateEpoch          *int64
	PoDateUtc            *string
	PoNumber             *string
	PurchasePrice        *string
	PurchasingAccount    *string
	PurchasingContact    *string
	Vendor               *string
	WarrantyExpires      *string
	WarrantyExpiresEpoch *int64
	WarrantyExpiresUtc   *string
}

type FindComputersByNameSubset200ApplicationXMLSecurity struct {
	ActivationLock      *bool
	ExternalBootLevel   *string
	FirewallEnabled     *bool
	RecoveryLockEnabled *bool
	SecureBootLevel     *string
}

type FindComputersByNameSubset200ApplicationXMLSoftwareApplicationsApplication struct {
	Name    *string
	Path    *string
	Version *string
}

type FindComputersByNameSubset200ApplicationXMLSoftwareApplications struct {
	Application *FindComputersByNameSubset200ApplicationXMLSoftwareApplicationsApplication
	Size        *int64
}

type FindComputersByNameSubset200ApplicationXMLSoftwareAvailableSoftwareUpdates struct {
	Name *string
}

type FindComputersByNameSubset200ApplicationXMLSoftwareAvailableUpdatesUpdate struct {
	Name        *string
	PackageName *string
	Version     *string
}

type FindComputersByNameSubset200ApplicationXMLSoftwareAvailableUpdates struct {
	Update *FindComputersByNameSubset200ApplicationXMLSoftwareAvailableUpdatesUpdate
}

type FindComputersByNameSubset200ApplicationXMLSoftwareCachedByCasper struct {
	Package *string
}

type FindComputersByNameSubset200ApplicationXMLSoftwareFontsFont struct {
	Name    *string
	Path    *string
	Version *string
}

type FindComputersByNameSubset200ApplicationXMLSoftwareFonts struct {
	Font *FindComputersByNameSubset200ApplicationXMLSoftwareFontsFont
	Size *int64
}

type FindComputersByNameSubset200ApplicationXMLSoftwareInstalledByCasper struct {
	Package *string
}

type FindComputersByNameSubset200ApplicationXMLSoftwareInstalledByInstallerSwu struct {
	Package *string
}

type FindComputersByNameSubset200ApplicationXMLSoftwareLicensedSoftware struct {
	Name *string
}

type FindComputersByNameSubset200ApplicationXMLSoftwarePluginsPlugin struct {
	Name    *string
	Path    *string
	Version *string
}

type FindComputersByNameSubset200ApplicationXMLSoftwarePlugins struct {
	Plugin *FindComputersByNameSubset200ApplicationXMLSoftwarePluginsPlugin
	Size   *int64
}

type FindComputersByNameSubset200ApplicationXMLSoftwareRunningServices struct {
	Name *string
}

type FindComputersByNameSubset200ApplicationXMLSoftware struct {
	Applications             []FindComputersByNameSubset200ApplicationXMLSoftwareApplications
	AvailableSoftwareUpdates []FindComputersByNameSubset200ApplicationXMLSoftwareAvailableSoftwareUpdates
	AvailableUpdates         []FindComputersByNameSubset200ApplicationXMLSoftwareAvailableUpdates
	CachedByCasper           []FindComputersByNameSubset200ApplicationXMLSoftwareCachedByCasper
	Fonts                    []FindComputersByNameSubset200ApplicationXMLSoftwareFonts
	InstalledByCasper        []FindComputersByNameSubset200ApplicationXMLSoftwareInstalledByCasper
	InstalledByInstallerSwu  []FindComputersByNameSubset200ApplicationXMLSoftwareInstalledByInstallerSwu
	LicensedSoftware         []FindComputersByNameSubset200ApplicationXMLSoftwareLicensedSoftware
	Plugins                  []FindComputersByNameSubset200ApplicationXMLSoftwarePlugins
	RunningServices          []FindComputersByNameSubset200ApplicationXMLSoftwareRunningServices
	UnixExecutables          *string
}

// FindComputersByNameSubset200ApplicationXML - OK
type FindComputersByNameSubset200ApplicationXML struct {
	Certificates          []FindComputersByNameSubset200ApplicationXMLCertificates
	ConfigurationProfiles []FindComputersByNameSubset200ApplicationXMLConfigurationProfiles
	ExtensionAttributes   []FindComputersByNameSubset200ApplicationXMLExtensionAttributes
	General               *FindComputersByNameSubset200ApplicationXMLGeneral
	GroupsAccounts        *FindComputersByNameSubset200ApplicationXMLGroupsAccounts
	Hardware              *FindComputersByNameSubset200ApplicationXMLHardware
	Location              *FindComputersByNameSubset200ApplicationXMLLocation
	Peripherals           *FindComputersByNameSubset200ApplicationXMLPeripherals
	Purchasing            *FindComputersByNameSubset200ApplicationXMLPurchasing
	Security              *FindComputersByNameSubset200ApplicationXMLSecurity
	Software              *FindComputersByNameSubset200ApplicationXMLSoftware
}

type FindComputersByNameSubset200ApplicationJSONCertificatesCertificate struct {
	CommonName   *string `json:"common_name,omitempty"`
	ExpiresEpoch *int64  `json:"expires_epoch,omitempty"`
	ExpiresUtc   *string `json:"expires_utc,omitempty"`
	Identify     *bool   `json:"identify,omitempty"`
	Name         *string `json:"name,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONCertificates struct {
	Certificate *FindComputersByNameSubset200ApplicationJSONCertificatesCertificate `json:"certificate,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONConfigurationProfilesConfigurationProfile struct {
	ID          *int64  `json:"id,omitempty"`
	IsRemovable *bool   `json:"is_removable,omitempty"`
	Name        *string `json:"name,omitempty"`
	UUID        *string `json:"uuid,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONConfigurationProfiles struct {
	ConfigurationProfile *FindComputersByNameSubset200ApplicationJSONConfigurationProfilesConfigurationProfile `json:"configuration_profile,omitempty"`
	Size                 *int64                                                                                `json:"size,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONExtensionAttributesExtensionAttribute struct {
	ID    *int64  `json:"id,omitempty"`
	Name  *string `json:"name,omitempty"`
	Type  *string `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONExtensionAttributes struct {
	ExtensionAttribute *FindComputersByNameSubset200ApplicationJSONExtensionAttributesExtensionAttribute `json:"extension_attribute,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONGeneralManagementStatus struct {
	EnrolledViaDep         *bool `json:"enrolled_via_dep,omitempty"`
	UserApprovedEnrollment *bool `json:"user_approved_enrollment,omitempty"`
	UserApprovedMdm        *bool `json:"user_approved_mdm,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONGeneralMdmCapableUsers struct {
	MdmCapableUser *string `json:"mdm_capable_user,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONGeneralRemoteManagement struct {
	Managed            *bool   `json:"managed,omitempty"`
	ManagementUsername *string `json:"management_username,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONGeneralSite struct {
	ID *int64 `json:"id,omitempty"`
	// Name of the site
	Name string `json:"name"`
}

type FindComputersByNameSubset200ApplicationJSONGeneral struct {
	AltMacAddress              *string                                                             `json:"alt_mac_address,omitempty"`
	AltNetworkAdapterType      *string                                                             `json:"alt_network_adapter_type,omitempty"`
	AssetTag                   *string                                                             `json:"asset_tag,omitempty"`
	Barcode1                   *string                                                             `json:"barcode_1,omitempty"`
	Barcode2                   *string                                                             `json:"barcode_2,omitempty"`
	DistributionPoint          *string                                                             `json:"distribution_point,omitempty"`
	ID                         *int64                                                              `json:"id,omitempty"`
	InitialEntryDate           *string                                                             `json:"initial_entry_date,omitempty"`
	InitialEntryDateEpoch      *int64                                                              `json:"initial_entry_date_epoch,omitempty"`
	InitialEntryDateUtc        *string                                                             `json:"initial_entry_date_utc,omitempty"`
	IPAddress                  *string                                                             `json:"ip_address,omitempty"`
	ItunesStoreAccountIsActive *bool                                                               `json:"itunes_store_account_is_active,omitempty"`
	JamfVersion                *string                                                             `json:"jamf_version,omitempty"`
	LastCloudBackupDateEpoch   *int64                                                              `json:"last_cloud_backup_date_epoch,omitempty"`
	LastCloudBackupDateUtc     *string                                                             `json:"last_cloud_backup_date_utc,omitempty"`
	LastContactTime            *string                                                             `json:"last_contact_time,omitempty"`
	LastContactTimeEpoch       *int64                                                              `json:"last_contact_time_epoch,omitempty"`
	LastContactTimeUtc         *string                                                             `json:"last_contact_time_utc,omitempty"`
	LastEnrolledDateEpoch      *int64                                                              `json:"last_enrolled_date_epoch,omitempty"`
	LastEnrolledDateUtc        *string                                                             `json:"last_enrolled_date_utc,omitempty"`
	LastReportedIP             *string                                                             `json:"last_reported_ip,omitempty"`
	MacAddress                 *string                                                             `json:"mac_address,omitempty"`
	ManagementStatus           *FindComputersByNameSubset200ApplicationJSONGeneralManagementStatus `json:"management_status,omitempty"`
	MdmCapable                 *bool                                                               `json:"mdm_capable,omitempty"`
	MdmCapableUsers            *FindComputersByNameSubset200ApplicationJSONGeneralMdmCapableUsers  `json:"mdm_capable_users,omitempty"`
	// Name of computer
	Name               *string                                                             `json:"name,omitempty"`
	NetworkAdapterType *string                                                             `json:"network_adapter_type,omitempty"`
	Platform           *string                                                             `json:"platform,omitempty"`
	RemoteManagement   *FindComputersByNameSubset200ApplicationJSONGeneralRemoteManagement `json:"remote_management,omitempty"`
	ReportDate         *string                                                             `json:"report_date,omitempty"`
	ReportDateEpoch    *int64                                                              `json:"report_date_epoch,omitempty"`
	ReportDateUtc      *string                                                             `json:"report_date_utc,omitempty"`
	SerialNumber       *string                                                             `json:"serial_number,omitempty"`
	Site               *FindComputersByNameSubset200ApplicationJSONGeneralSite             `json:"site,omitempty"`
	Sus                *string                                                             `json:"sus,omitempty"`
	Udid               *string                                                             `json:"udid,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONGroupsAccountsComputerGroupMemberships struct {
	Group *string `json:"group,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONGroupsAccountsLocalAccountsUser struct {
	Administrator    *bool   `json:"administrator,omitempty"`
	FilevaultEnabled *bool   `json:"filevault_enabled,omitempty"`
	Home             *string `json:"home,omitempty"`
	HomeSize         *string `json:"home_size,omitempty"`
	HomeSizeMb       *string `json:"home_size_mb,omitempty"`
	Name             *string `json:"name,omitempty"`
	Realname         *string `json:"realname,omitempty"`
	UID              *string `json:"uid,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONGroupsAccountsLocalAccounts struct {
	User *FindComputersByNameSubset200ApplicationJSONGroupsAccountsLocalAccountsUser `json:"user,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONGroupsAccounts struct {
	ComputerGroupMemberships []FindComputersByNameSubset200ApplicationJSONGroupsAccountsComputerGroupMemberships `json:"computer_group_memberships,omitempty"`
	LocalAccounts            []FindComputersByNameSubset200ApplicationJSONGroupsAccountsLocalAccounts            `json:"local_accounts,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONHardwareFilevault2Users struct {
	User *string `json:"user,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONHardwareMappedPrintersPrinter struct {
	Location *string `json:"location,omitempty"`
	Name     *string `json:"name,omitempty"`
	Type     *string `json:"type,omitempty"`
	URI      *string `json:"uri,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONHardwareMappedPrinters struct {
	Printer *FindComputersByNameSubset200ApplicationJSONHardwareMappedPrintersPrinter `json:"printer,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONHardwareSipStatus string

const (
	FindComputersByNameSubset200ApplicationJSONHardwareSipStatusEnabled  FindComputersByNameSubset200ApplicationJSONHardwareSipStatus = "Enabled"
	FindComputersByNameSubset200ApplicationJSONHardwareSipStatusDisabled FindComputersByNameSubset200ApplicationJSONHardwareSipStatus = "Disabled"
)

func (e FindComputersByNameSubset200ApplicationJSONHardwareSipStatus) ToPointer() *FindComputersByNameSubset200ApplicationJSONHardwareSipStatus {
	return &e
}

func (e *FindComputersByNameSubset200ApplicationJSONHardwareSipStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Enabled":
		fallthrough
	case "Disabled":
		*e = FindComputersByNameSubset200ApplicationJSONHardwareSipStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FindComputersByNameSubset200ApplicationJSONHardwareSipStatus: %v", v)
	}
}

type FindComputersByNameSubset200ApplicationJSONHardwareStorageDevicePartition struct {
	BootDriveAvailableMb *int64  `json:"boot_drive_available_mb,omitempty"`
	Filevault2Percent    *int64  `json:"filevault2_percent,omitempty"`
	Filevault2Status     *string `json:"filevault2_status,omitempty"`
	FilevaultPercent     *int64  `json:"filevault_percent,omitempty"`
	FilevaultStatus      *string `json:"filevault_status,omitempty"`
	LvUUID               *string `json:"lvUUID,omitempty"`
	LvgUUID              *string `json:"lvgUUID,omitempty"`
	Name                 *string `json:"name,omitempty"`
	PartitionCapacityMb  *int64  `json:"partition_capacity_mb,omitempty"`
	PercentageFull       *int64  `json:"percentage_full,omitempty"`
	PvUUID               *string `json:"pvUUID,omitempty"`
	Size                 *int64  `json:"size,omitempty"`
	Type                 *string `json:"type,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONHardwareStorageDevice struct {
	ConnectionType  *string                                                                     `json:"connection_type,omitempty"`
	Disk            *string                                                                     `json:"disk,omitempty"`
	DriveCapacityMb *int64                                                                      `json:"drive_capacity_mb,omitempty"`
	Model           *string                                                                     `json:"model,omitempty"`
	Partition       []FindComputersByNameSubset200ApplicationJSONHardwareStorageDevicePartition `json:"partition,omitempty"`
	Revision        *string                                                                     `json:"revision,omitempty"`
	SerialNumber    *string                                                                     `json:"serial_number,omitempty"`
	Size            *int64                                                                      `json:"size,omitempty"`
	SmartStatus     *string                                                                     `json:"smart_status,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONHardwareStorage struct {
	Device *FindComputersByNameSubset200ApplicationJSONHardwareStorageDevice `json:"device,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONHardware struct {
	ActiveDirectoryStatus       *string                                                              `json:"active_directory_status,omitempty"`
	AvailableRAMSlots           *int64                                                               `json:"available_ram_slots,omitempty"`
	BatteryCapacity             *int64                                                               `json:"battery_capacity,omitempty"`
	BleCapable                  *bool                                                                `json:"ble_capable,omitempty"`
	BootRom                     *string                                                              `json:"boot_rom,omitempty"`
	BusSpeed                    *int64                                                               `json:"bus_speed,omitempty"`
	BusSpeedMhz                 *int64                                                               `json:"bus_speed_mhz,omitempty"`
	CacheSize                   *int64                                                               `json:"cache_size,omitempty"`
	CacheSizeKb                 *int64                                                               `json:"cache_size_kb,omitempty"`
	DiskEncryptionConfiguration *string                                                              `json:"disk_encryption_configuration,omitempty"`
	Filevault2Users             []FindComputersByNameSubset200ApplicationJSONHardwareFilevault2Users `json:"filevault_2_users,omitempty"`
	GatekeeperStatus            *string                                                              `json:"gatekeeper_status,omitempty"`
	InstitutionalRecoveryKey    *string                                                              `json:"institutional_recovery_key,omitempty"`
	Make                        *string                                                              `json:"make,omitempty"`
	MappedPrinters              []FindComputersByNameSubset200ApplicationJSONHardwareMappedPrinters  `json:"mapped_printers,omitempty"`
	MasterPasswordSet           *bool                                                                `json:"master_password_set,omitempty"`
	Model                       *string                                                              `json:"model,omitempty"`
	ModelIdentifier             *string                                                              `json:"model_identifier,omitempty"`
	NicSpeed                    *string                                                              `json:"nic_speed,omitempty"`
	NumberCores                 *int64                                                               `json:"number_cores,omitempty"`
	NumberProcessors            *int64                                                               `json:"number_processors,omitempty"`
	OpticalDrive                *string                                                              `json:"optical_drive,omitempty"`
	OsBuild                     *string                                                              `json:"os_build,omitempty"`
	OsName                      *string                                                              `json:"os_name,omitempty"`
	OsVersion                   *string                                                              `json:"os_version,omitempty"`
	ProcessorArchitechture      *string                                                              `json:"processor_architechture,omitempty"`
	ProcessorSpeed              *string                                                              `json:"processor_speed,omitempty"`
	ProcessorSpeedMhz           *string                                                              `json:"processor_speed_mhz,omitempty"`
	ProcessorType               *string                                                              `json:"processor_type,omitempty"`
	ServicePack                 *string                                                              `json:"service_pack,omitempty"`
	SipStatus                   *FindComputersByNameSubset200ApplicationJSONHardwareSipStatus        `json:"sip_status,omitempty"`
	SmcVersion                  *string                                                              `json:"smc_version,omitempty"`
	Storage                     []FindComputersByNameSubset200ApplicationJSONHardwareStorage         `json:"storage,omitempty"`
	TotalRAM                    *int64                                                               `json:"total_ram,omitempty"`
	TotalRAMMb                  *int64                                                               `json:"total_ram_mb,omitempty"`
	XprotectVersion             *string                                                              `json:"xprotect_version,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONLocation struct {
	Building     *string `json:"building,omitempty"`
	Department   *string `json:"department,omitempty"`
	EmailAddress *string `json:"email_address,omitempty"`
	Phone        *string `json:"phone,omitempty"`
	PhoneNumber  *string `json:"phone_number,omitempty"`
	Position     *string `json:"position,omitempty"`
	RealName     *string `json:"real_name,omitempty"`
	Realname     *string `json:"realname,omitempty"`
	Room         *string `json:"room,omitempty"`
	Username     *string `json:"username,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONPeripheralsPeripheralsAttachmentsAttachment struct {
	Filename *string `json:"filename,omitempty"`
	ID       *int64  `json:"id,omitempty"`
	URI      *string `json:"uri,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONPeripheralsPeripheralsAttachments struct {
	Attachment *FindComputersByNameSubset200ApplicationJSONPeripheralsPeripheralsAttachmentsAttachment `json:"attachment,omitempty"`
	Size       *int64                                                                                  `json:"size,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONPeripheralsPeripheralsPeripheralFieldsField struct {
	Name  *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONPeripheralsPeripheralsPeripheralFields struct {
	Field *FindComputersByNameSubset200ApplicationJSONPeripheralsPeripheralsPeripheralFieldsField `json:"field,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONPeripheralsPeripheralsPeripheral struct {
	BarCode1 *string                                                                            `json:"bar_code_1,omitempty"`
	BarCode2 *string                                                                            `json:"bar_code_2,omitempty"`
	Fields   *FindComputersByNameSubset200ApplicationJSONPeripheralsPeripheralsPeripheralFields `json:"fields,omitempty"`
	ID       *int64                                                                             `json:"id,omitempty"`
	// Name of the peripheral type
	Type *string `json:"type,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONPeripheralsPeripheralsPurchasing struct {
	ApplecareID          *string `json:"applecare_id,omitempty"`
	IsLeased             *bool   `json:"is_leased,omitempty"`
	IsPurchased          *bool   `json:"is_purchased,omitempty"`
	LeaseExpires         *string `json:"lease_expires,omitempty"`
	LeaseExpiresEpoch    *int64  `json:"lease_expires_epoch,omitempty"`
	LeaseExpiresUtc      *string `json:"lease_expires_utc,omitempty"`
	LifeExpectancy       *int64  `json:"life_expectancy,omitempty"`
	PoDate               *string `json:"po_date,omitempty"`
	PoDateEpoch          *int64  `json:"po_date_epoch,omitempty"`
	PoDateUtc            *string `json:"po_date_utc,omitempty"`
	PoNumber             *string `json:"po_number,omitempty"`
	PurchasePrice        *string `json:"purchase_price,omitempty"`
	PurchasingAccount    *string `json:"purchasing_account,omitempty"`
	PurchasingContact    *string `json:"purchasing_contact,omitempty"`
	Vendor               *string `json:"vendor,omitempty"`
	WarrantyExpires      *string `json:"warranty_expires,omitempty"`
	WarrantyExpiresEpoch *int64  `json:"warranty_expires_epoch,omitempty"`
	WarrantyExpiresUtc   *string `json:"warranty_expires_utc,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONPeripheralsPeripherals struct {
	Attachments []FindComputersByNameSubset200ApplicationJSONPeripheralsPeripheralsAttachments `json:"attachments,omitempty"`
	Peripheral  *FindComputersByNameSubset200ApplicationJSONPeripheralsPeripheralsPeripheral   `json:"peripheral,omitempty"`
	Purchasing  *FindComputersByNameSubset200ApplicationJSONPeripheralsPeripheralsPurchasing   `json:"purchasing,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONPeripherals struct {
	Peripherals []FindComputersByNameSubset200ApplicationJSONPeripheralsPeripherals `json:"peripherals,omitempty"`
	Size        *int64                                                              `json:"size,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONPurchasing struct {
	ApplecareID          *string `json:"applecare_id,omitempty"`
	IsLeased             *bool   `json:"is_leased,omitempty"`
	IsPurchased          *bool   `json:"is_purchased,omitempty"`
	LeaseExpires         *string `json:"lease_expires,omitempty"`
	LeaseExpiresEpoch    *int64  `json:"lease_expires_epoch,omitempty"`
	LeaseExpiresUtc      *string `json:"lease_expires_utc,omitempty"`
	LifeExpectancy       *int64  `json:"life_expectancy,omitempty"`
	PoDate               *string `json:"po_date,omitempty"`
	PoDateEpoch          *int64  `json:"po_date_epoch,omitempty"`
	PoDateUtc            *string `json:"po_date_utc,omitempty"`
	PoNumber             *string `json:"po_number,omitempty"`
	PurchasePrice        *string `json:"purchase_price,omitempty"`
	PurchasingAccount    *string `json:"purchasing_account,omitempty"`
	PurchasingContact    *string `json:"purchasing_contact,omitempty"`
	Vendor               *string `json:"vendor,omitempty"`
	WarrantyExpires      *string `json:"warranty_expires,omitempty"`
	WarrantyExpiresEpoch *int64  `json:"warranty_expires_epoch,omitempty"`
	WarrantyExpiresUtc   *string `json:"warranty_expires_utc,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONSecurity struct {
	ActivationLock      *bool   `json:"activation_lock,omitempty"`
	ExternalBootLevel   *string `json:"external_boot_level,omitempty"`
	FirewallEnabled     *bool   `json:"firewall_enabled,omitempty"`
	RecoveryLockEnabled *bool   `json:"recovery_lock_enabled,omitempty"`
	SecureBootLevel     *string `json:"secure_boot_level,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONSoftwareApplicationsApplication struct {
	Name    *string `json:"name,omitempty"`
	Path    *string `json:"path,omitempty"`
	Version *string `json:"version,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONSoftwareApplications struct {
	Application *FindComputersByNameSubset200ApplicationJSONSoftwareApplicationsApplication `json:"application,omitempty"`
	Size        *int64                                                                      `json:"size,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONSoftwareAvailableSoftwareUpdates struct {
	Name *string `json:"name,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONSoftwareAvailableUpdatesUpdate struct {
	Name        *string `json:"name,omitempty"`
	PackageName *string `json:"package_name,omitempty"`
	Version     *string `json:"version,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONSoftwareAvailableUpdates struct {
	Update *FindComputersByNameSubset200ApplicationJSONSoftwareAvailableUpdatesUpdate `json:"update,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONSoftwareCachedByCasper struct {
	Package *string `json:"package,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONSoftwareFontsFont struct {
	Name    *string `json:"name,omitempty"`
	Path    *string `json:"path,omitempty"`
	Version *string `json:"version,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONSoftwareFonts struct {
	Font *FindComputersByNameSubset200ApplicationJSONSoftwareFontsFont `json:"font,omitempty"`
	Size *int64                                                        `json:"size,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONSoftwareInstalledByCasper struct {
	Package *string `json:"package,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONSoftwareInstalledByInstallerSwu struct {
	Package *string `json:"package,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONSoftwareLicensedSoftware struct {
	Name *string `json:"name,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONSoftwarePluginsPlugin struct {
	Name    *string `json:"name,omitempty"`
	Path    *string `json:"path,omitempty"`
	Version *string `json:"version,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONSoftwarePlugins struct {
	Plugin *FindComputersByNameSubset200ApplicationJSONSoftwarePluginsPlugin `json:"plugin,omitempty"`
	Size   *int64                                                            `json:"size,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONSoftwareRunningServices struct {
	Name *string `json:"name,omitempty"`
}

type FindComputersByNameSubset200ApplicationJSONSoftware struct {
	Applications             []FindComputersByNameSubset200ApplicationJSONSoftwareApplications             `json:"applications,omitempty"`
	AvailableSoftwareUpdates []FindComputersByNameSubset200ApplicationJSONSoftwareAvailableSoftwareUpdates `json:"available_software_updates,omitempty"`
	AvailableUpdates         []FindComputersByNameSubset200ApplicationJSONSoftwareAvailableUpdates         `json:"available_updates,omitempty"`
	CachedByCasper           []FindComputersByNameSubset200ApplicationJSONSoftwareCachedByCasper           `json:"cached_by_casper,omitempty"`
	Fonts                    []FindComputersByNameSubset200ApplicationJSONSoftwareFonts                    `json:"fonts,omitempty"`
	InstalledByCasper        []FindComputersByNameSubset200ApplicationJSONSoftwareInstalledByCasper        `json:"installed_by_casper,omitempty"`
	InstalledByInstallerSwu  []FindComputersByNameSubset200ApplicationJSONSoftwareInstalledByInstallerSwu  `json:"installed_by_installer_swu,omitempty"`
	LicensedSoftware         []FindComputersByNameSubset200ApplicationJSONSoftwareLicensedSoftware         `json:"licensed_software,omitempty"`
	Plugins                  []FindComputersByNameSubset200ApplicationJSONSoftwarePlugins                  `json:"plugins,omitempty"`
	RunningServices          []FindComputersByNameSubset200ApplicationJSONSoftwareRunningServices          `json:"running_services,omitempty"`
	UnixExecutables          *string                                                                       `json:"unix_executables,omitempty"`
}

// FindComputersByNameSubset200ApplicationJSON - OK
type FindComputersByNameSubset200ApplicationJSON struct {
	Certificates          []FindComputersByNameSubset200ApplicationJSONCertificates          `json:"certificates,omitempty"`
	ConfigurationProfiles []FindComputersByNameSubset200ApplicationJSONConfigurationProfiles `json:"configuration_profiles,omitempty"`
	ExtensionAttributes   []FindComputersByNameSubset200ApplicationJSONExtensionAttributes   `json:"extension_attributes,omitempty"`
	General               *FindComputersByNameSubset200ApplicationJSONGeneral                `json:"general,omitempty"`
	GroupsAccounts        *FindComputersByNameSubset200ApplicationJSONGroupsAccounts         `json:"groups_accounts,omitempty"`
	Hardware              *FindComputersByNameSubset200ApplicationJSONHardware               `json:"hardware,omitempty"`
	Location              *FindComputersByNameSubset200ApplicationJSONLocation               `json:"location,omitempty"`
	Peripherals           *FindComputersByNameSubset200ApplicationJSONPeripherals            `json:"peripherals,omitempty"`
	Purchasing            *FindComputersByNameSubset200ApplicationJSONPurchasing             `json:"purchasing,omitempty"`
	Security              *FindComputersByNameSubset200ApplicationJSONSecurity               `json:"security,omitempty"`
	Software              *FindComputersByNameSubset200ApplicationJSONSoftware               `json:"software,omitempty"`
}

type FindComputersByNameSubsetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	FindComputersByNameSubset200ApplicationJSONObject *FindComputersByNameSubset200ApplicationJSON
}
