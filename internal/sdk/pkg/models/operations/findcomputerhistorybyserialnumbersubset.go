// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"jamf/internal/sdk/pkg/models/shared"
	"net/http"
)

// FindComputerHistoryBySerialNumberSubsetSubset - Subset to filter by
type FindComputerHistoryBySerialNumberSubsetSubset string

const (
	FindComputerHistoryBySerialNumberSubsetSubsetGeneral                 FindComputerHistoryBySerialNumberSubsetSubset = "General"
	FindComputerHistoryBySerialNumberSubsetSubsetComputerUsageLogs       FindComputerHistoryBySerialNumberSubsetSubset = "ComputerUsageLogs"
	FindComputerHistoryBySerialNumberSubsetSubsetAudits                  FindComputerHistoryBySerialNumberSubsetSubset = "Audits"
	FindComputerHistoryBySerialNumberSubsetSubsetPolicyLogs              FindComputerHistoryBySerialNumberSubsetSubset = "PolicyLogs"
	FindComputerHistoryBySerialNumberSubsetSubsetCasperRemoteLogs        FindComputerHistoryBySerialNumberSubsetSubset = "CasperRemoteLogs"
	FindComputerHistoryBySerialNumberSubsetSubsetScreenSharingLogs       FindComputerHistoryBySerialNumberSubsetSubset = "ScreenSharingLogs"
	FindComputerHistoryBySerialNumberSubsetSubsetCasperImagingLogs       FindComputerHistoryBySerialNumberSubsetSubset = "CasperImagingLogs"
	FindComputerHistoryBySerialNumberSubsetSubsetCommands                FindComputerHistoryBySerialNumberSubsetSubset = "Commands"
	FindComputerHistoryBySerialNumberSubsetSubsetUserLocation            FindComputerHistoryBySerialNumberSubsetSubset = "UserLocation"
	FindComputerHistoryBySerialNumberSubsetSubsetMacAppStoreApplications FindComputerHistoryBySerialNumberSubsetSubset = "MacAppStoreApplications"
)

func (e FindComputerHistoryBySerialNumberSubsetSubset) ToPointer() *FindComputerHistoryBySerialNumberSubsetSubset {
	return &e
}

func (e *FindComputerHistoryBySerialNumberSubsetSubset) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "General":
		fallthrough
	case "ComputerUsageLogs":
		fallthrough
	case "Audits":
		fallthrough
	case "PolicyLogs":
		fallthrough
	case "CasperRemoteLogs":
		fallthrough
	case "ScreenSharingLogs":
		fallthrough
	case "CasperImagingLogs":
		fallthrough
	case "Commands":
		fallthrough
	case "UserLocation":
		fallthrough
	case "MacAppStoreApplications":
		*e = FindComputerHistoryBySerialNumberSubsetSubset(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FindComputerHistoryBySerialNumberSubsetSubset: %v", v)
	}
}

type FindComputerHistoryBySerialNumberSubsetRequest struct {
	// Computer Serial Number to filter by
	Serialnumber string `pathParam:"style=simple,explode=false,name=serialnumber"`
	// Subset to filter by
	Subset FindComputerHistoryBySerialNumberSubsetSubset `pathParam:"style=simple,explode=false,name=subset"`
}

type FindComputerHistoryBySerialNumberSubsetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	ComputerHistory *shared.ComputerHistory
}
