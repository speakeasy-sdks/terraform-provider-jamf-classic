// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"jamf/internal/sdk/pkg/models/shared"
	"net/http"
)

// FindMobileDevicesBySerialNumberSubsetSubset - Subset to filter by
type FindMobileDevicesBySerialNumberSubsetSubset string

const (
	FindMobileDevicesBySerialNumberSubsetSubsetGeneral               FindMobileDevicesBySerialNumberSubsetSubset = "General"
	FindMobileDevicesBySerialNumberSubsetSubsetLocation              FindMobileDevicesBySerialNumberSubsetSubset = "Location"
	FindMobileDevicesBySerialNumberSubsetSubsetPurchasing            FindMobileDevicesBySerialNumberSubsetSubset = "Purchasing"
	FindMobileDevicesBySerialNumberSubsetSubsetApplications          FindMobileDevicesBySerialNumberSubsetSubset = "Applications"
	FindMobileDevicesBySerialNumberSubsetSubsetSecurity              FindMobileDevicesBySerialNumberSubsetSubset = "Security"
	FindMobileDevicesBySerialNumberSubsetSubsetNetwork               FindMobileDevicesBySerialNumberSubsetSubset = "Network"
	FindMobileDevicesBySerialNumberSubsetSubsetCertificates          FindMobileDevicesBySerialNumberSubsetSubset = "Certificates"
	FindMobileDevicesBySerialNumberSubsetSubsetConfigurationProfiles FindMobileDevicesBySerialNumberSubsetSubset = "ConfigurationProfiles"
	FindMobileDevicesBySerialNumberSubsetSubsetProvisioningProfiles  FindMobileDevicesBySerialNumberSubsetSubset = "ProvisioningProfiles"
	FindMobileDevicesBySerialNumberSubsetSubsetMobileDeviceGroups    FindMobileDevicesBySerialNumberSubsetSubset = "MobileDeviceGroups"
	FindMobileDevicesBySerialNumberSubsetSubsetExtensionAttributes   FindMobileDevicesBySerialNumberSubsetSubset = "ExtensionAttributes"
)

func (e FindMobileDevicesBySerialNumberSubsetSubset) ToPointer() *FindMobileDevicesBySerialNumberSubsetSubset {
	return &e
}

func (e *FindMobileDevicesBySerialNumberSubsetSubset) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "General":
		fallthrough
	case "Location":
		fallthrough
	case "Purchasing":
		fallthrough
	case "Applications":
		fallthrough
	case "Security":
		fallthrough
	case "Network":
		fallthrough
	case "Certificates":
		fallthrough
	case "ConfigurationProfiles":
		fallthrough
	case "ProvisioningProfiles":
		fallthrough
	case "MobileDeviceGroups":
		fallthrough
	case "ExtensionAttributes":
		*e = FindMobileDevicesBySerialNumberSubsetSubset(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FindMobileDevicesBySerialNumberSubsetSubset: %v", v)
	}
}

type FindMobileDevicesBySerialNumberSubsetRequest struct {
	// Serial number to filter by
	Serialnumber string `pathParam:"style=simple,explode=false,name=serialnumber"`
	// Subset to filter by
	Subset FindMobileDevicesBySerialNumberSubsetSubset `pathParam:"style=simple,explode=false,name=subset"`
}

type FindMobileDevicesBySerialNumberSubsetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	MobileDevice *shared.MobileDevice
}
