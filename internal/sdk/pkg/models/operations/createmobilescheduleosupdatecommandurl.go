// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// CreateMobileScheduleOSUpdateCommandURLInstallAction - Specify the behavior of the install. Possible integer values are: 1 (Download the update for users to install), 2 (Download and install the update, and restart devices after installation)
type CreateMobileScheduleOSUpdateCommandURLInstallAction int64

const (
	CreateMobileScheduleOSUpdateCommandURLInstallActionOne CreateMobileScheduleOSUpdateCommandURLInstallAction = 1
	CreateMobileScheduleOSUpdateCommandURLInstallActionTwo CreateMobileScheduleOSUpdateCommandURLInstallAction = 2
)

func (e CreateMobileScheduleOSUpdateCommandURLInstallAction) ToPointer() *CreateMobileScheduleOSUpdateCommandURLInstallAction {
	return &e
}

func (e *CreateMobileScheduleOSUpdateCommandURLInstallAction) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		fallthrough
	case 2:
		*e = CreateMobileScheduleOSUpdateCommandURLInstallAction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateMobileScheduleOSUpdateCommandURLInstallAction: %v", v)
	}
}

type CreateMobileScheduleOSUpdateCommandURLRequest struct {
	// Mobile device ID values, multiple IDs may be separated by commas (e.g. /id/13,14,15)
	IDList string `pathParam:"style=simple,explode=false,name=id_list"`
	// Specify the behavior of the install. Possible integer values are: 1 (Download the update for users to install), 2 (Download and install the update, and restart devices after installation)
	InstallAction CreateMobileScheduleOSUpdateCommandURLInstallAction `pathParam:"style=simple,explode=false,name=install_action"`
}

type CreateMobileScheduleOSUpdateCommandURLResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
