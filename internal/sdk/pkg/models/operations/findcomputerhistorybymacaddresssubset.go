// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"jamf/internal/sdk/pkg/models/shared"
	"net/http"
)

// FindComputerHistoryByMacAddressSubsetSubset - Subset to filter by
type FindComputerHistoryByMacAddressSubsetSubset string

const (
	FindComputerHistoryByMacAddressSubsetSubsetGeneral                 FindComputerHistoryByMacAddressSubsetSubset = "General"
	FindComputerHistoryByMacAddressSubsetSubsetComputerUsageLogs       FindComputerHistoryByMacAddressSubsetSubset = "ComputerUsageLogs"
	FindComputerHistoryByMacAddressSubsetSubsetAudits                  FindComputerHistoryByMacAddressSubsetSubset = "Audits"
	FindComputerHistoryByMacAddressSubsetSubsetPolicyLogs              FindComputerHistoryByMacAddressSubsetSubset = "PolicyLogs"
	FindComputerHistoryByMacAddressSubsetSubsetCasperRemoteLogs        FindComputerHistoryByMacAddressSubsetSubset = "CasperRemoteLogs"
	FindComputerHistoryByMacAddressSubsetSubsetScreenSharingLogs       FindComputerHistoryByMacAddressSubsetSubset = "ScreenSharingLogs"
	FindComputerHistoryByMacAddressSubsetSubsetCasperImagingLogs       FindComputerHistoryByMacAddressSubsetSubset = "CasperImagingLogs"
	FindComputerHistoryByMacAddressSubsetSubsetCommands                FindComputerHistoryByMacAddressSubsetSubset = "Commands"
	FindComputerHistoryByMacAddressSubsetSubsetUserLocation            FindComputerHistoryByMacAddressSubsetSubset = "UserLocation"
	FindComputerHistoryByMacAddressSubsetSubsetMacAppStoreApplications FindComputerHistoryByMacAddressSubsetSubset = "MacAppStoreApplications"
)

func (e FindComputerHistoryByMacAddressSubsetSubset) ToPointer() *FindComputerHistoryByMacAddressSubsetSubset {
	return &e
}

func (e *FindComputerHistoryByMacAddressSubsetSubset) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "General":
		fallthrough
	case "ComputerUsageLogs":
		fallthrough
	case "Audits":
		fallthrough
	case "PolicyLogs":
		fallthrough
	case "CasperRemoteLogs":
		fallthrough
	case "ScreenSharingLogs":
		fallthrough
	case "CasperImagingLogs":
		fallthrough
	case "Commands":
		fallthrough
	case "UserLocation":
		fallthrough
	case "MacAppStoreApplications":
		*e = FindComputerHistoryByMacAddressSubsetSubset(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FindComputerHistoryByMacAddressSubsetSubset: %v", v)
	}
}

type FindComputerHistoryByMacAddressSubsetRequest struct {
	// Computer Mac Address to filter by
	Macaddress string `pathParam:"style=simple,explode=false,name=macaddress"`
	// Subset to filter by
	Subset FindComputerHistoryByMacAddressSubsetSubset `pathParam:"style=simple,explode=false,name=subset"`
}

type FindComputerHistoryByMacAddressSubsetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	ComputerHistory *shared.ComputerHistory
}
