// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type FindComputerCommandsByUUIDRequest struct {
	// UUID to filter by
	UUID string `pathParam:"style=simple,explode=false,name=uuid"`
}

type FindComputerCommandsByUUID200ApplicationXMLComputersComputer struct {
	ID           *int64
	SerialNumber *string
	Udid         *string
}

type FindComputerCommandsByUUID200ApplicationXMLComputers struct {
	Computer *FindComputerCommandsByUUID200ApplicationXMLComputersComputer
	Size     *int64
}

type FindComputerCommandsByUUID200ApplicationXMLGeneral struct {
	ApnsResultStatus *string
	// Command type
	Command       *string
	DateSent      *string
	DateSentEpoch *string
	DateSentUtc   *string
	ID            *int64
	ProfileID     *int64
	ProfileUdid   *string
	Udid          *string
	UUID          *string
}

// FindComputerCommandsByUUID200ApplicationXML - OK
type FindComputerCommandsByUUID200ApplicationXML struct {
	Computers *FindComputerCommandsByUUID200ApplicationXMLComputers
	General   *FindComputerCommandsByUUID200ApplicationXMLGeneral
}

type FindComputerCommandsByUUID200ApplicationJSONComputersComputer struct {
	ID           *int64  `json:"id,omitempty"`
	SerialNumber *string `json:"serial_number,omitempty"`
	Udid         *string `json:"udid,omitempty"`
}

type FindComputerCommandsByUUID200ApplicationJSONComputers struct {
	Computer *FindComputerCommandsByUUID200ApplicationJSONComputersComputer `json:"computer,omitempty"`
	Size     *int64                                                         `json:"size,omitempty"`
}

type FindComputerCommandsByUUID200ApplicationJSONGeneral struct {
	ApnsResultStatus *string `json:"apns_result_status,omitempty"`
	// Command type
	Command       *string `json:"command,omitempty"`
	DateSent      *string `json:"date_sent,omitempty"`
	DateSentEpoch *string `json:"date_sent_epoch,omitempty"`
	DateSentUtc   *string `json:"date_sent_utc,omitempty"`
	ID            *int64  `json:"id,omitempty"`
	ProfileID     *int64  `json:"profile_id,omitempty"`
	ProfileUdid   *string `json:"profile_udid,omitempty"`
	Udid          *string `json:"udid,omitempty"`
	UUID          *string `json:"uuid,omitempty"`
}

// FindComputerCommandsByUUID200ApplicationJSON - OK
type FindComputerCommandsByUUID200ApplicationJSON struct {
	Computers *FindComputerCommandsByUUID200ApplicationJSONComputers `json:"computers,omitempty"`
	General   *FindComputerCommandsByUUID200ApplicationJSONGeneral   `json:"general,omitempty"`
}

type FindComputerCommandsByUUIDResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	FindComputerCommandsByUUID200ApplicationJSONObject *FindComputerCommandsByUUID200ApplicationJSON
}
