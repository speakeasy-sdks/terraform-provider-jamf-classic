// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// CreateComputerCommandByCommandAndActionAction - A value of "install" is similar to clicking the "Download and Install Updates" button on the UI. Any other value mimics the behavior of "Download Updates" from the UI.
type CreateComputerCommandByCommandAndActionAction string

const (
	CreateComputerCommandByCommandAndActionActionInstall CreateComputerCommandByCommandAndActionAction = "install"
)

func (e CreateComputerCommandByCommandAndActionAction) ToPointer() *CreateComputerCommandByCommandAndActionAction {
	return &e
}

func (e *CreateComputerCommandByCommandAndActionAction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "install":
		*e = CreateComputerCommandByCommandAndActionAction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateComputerCommandByCommandAndActionAction: %v", v)
	}
}

// CreateComputerCommandByCommandAndActionCommand - Command to send to device.
type CreateComputerCommandByCommandAndActionCommand string

const (
	CreateComputerCommandByCommandAndActionCommandScheduleOsUpdate CreateComputerCommandByCommandAndActionCommand = "ScheduleOSUpdate"
)

func (e CreateComputerCommandByCommandAndActionCommand) ToPointer() *CreateComputerCommandByCommandAndActionCommand {
	return &e
}

func (e *CreateComputerCommandByCommandAndActionCommand) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ScheduleOSUpdate":
		*e = CreateComputerCommandByCommandAndActionCommand(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateComputerCommandByCommandAndActionCommand: %v", v)
	}
}

type CreateComputerCommandByCommandAndActionRequest struct {
	// A value of "install" is similar to clicking the "Download and Install Updates" button on the UI. Any other value mimics the behavior of "Download Updates" from the UI.
	Action CreateComputerCommandByCommandAndActionAction `pathParam:"style=simple,explode=false,name=action"`
	// Command to send to device.
	Command CreateComputerCommandByCommandAndActionCommand `pathParam:"style=simple,explode=false,name=command"`
	// Id of computer or computers (supports comma separated values e.g. /id/8,10,55) to send the command
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

type CreateComputerCommandByCommandAndActionResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
