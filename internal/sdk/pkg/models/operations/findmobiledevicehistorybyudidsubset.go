// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"jamf/internal/sdk/pkg/models/shared"
	"net/http"
)

// FindMobileDeviceHistoryByUDIDSubsetSubset - Subset to filter by
type FindMobileDeviceHistoryByUDIDSubsetSubset string

const (
	FindMobileDeviceHistoryByUDIDSubsetSubsetGeneral            FindMobileDeviceHistoryByUDIDSubsetSubset = "General"
	FindMobileDeviceHistoryByUDIDSubsetSubsetManagementCommands FindMobileDeviceHistoryByUDIDSubsetSubset = "ManagementCommands"
	FindMobileDeviceHistoryByUDIDSubsetSubsetUserLocation       FindMobileDeviceHistoryByUDIDSubsetSubset = "UserLocation"
	FindMobileDeviceHistoryByUDIDSubsetSubsetAudits             FindMobileDeviceHistoryByUDIDSubsetSubset = "Audits"
	FindMobileDeviceHistoryByUDIDSubsetSubsetApplications       FindMobileDeviceHistoryByUDIDSubsetSubset = "Applications"
	FindMobileDeviceHistoryByUDIDSubsetSubsetEbooks             FindMobileDeviceHistoryByUDIDSubsetSubset = "Ebooks"
)

func (e FindMobileDeviceHistoryByUDIDSubsetSubset) ToPointer() *FindMobileDeviceHistoryByUDIDSubsetSubset {
	return &e
}

func (e *FindMobileDeviceHistoryByUDIDSubsetSubset) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "General":
		fallthrough
	case "ManagementCommands":
		fallthrough
	case "UserLocation":
		fallthrough
	case "Audits":
		fallthrough
	case "Applications":
		fallthrough
	case "Ebooks":
		*e = FindMobileDeviceHistoryByUDIDSubsetSubset(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FindMobileDeviceHistoryByUDIDSubsetSubset: %v", v)
	}
}

type FindMobileDeviceHistoryByUDIDSubsetRequest struct {
	// Subset to filter by
	Subset FindMobileDeviceHistoryByUDIDSubsetSubset `pathParam:"style=simple,explode=false,name=subset"`
	// UDID to filter by
	Udid string `pathParam:"style=simple,explode=false,name=udid"`
}

type FindMobileDeviceHistoryByUDIDSubsetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	MobileDeviceHistory *shared.MobileDeviceHistory
}
